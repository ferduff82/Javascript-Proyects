
Reduce:

Reduce expects a callback as filter and map, but it will also expect the initial state and the iteration

var orders = [
  { amount: 250 },
  { amount: 400 },
  { amount: 100 },
  { amount: 325 }
]

The old way:

var totalAmount = 0
for (var i = 0; i < orders.length; i++) {
  totalAmount += orders[i].amount
}


The new way: sum is the inital state that you can define in the end as you see in 0 state now and order is the array you will iterate

var totalAmount = orders.reduce(function(sum, order) {
  return sum + order.amount
}, 0)


With arrow functions:

var totalAmount = orders.reduce((sum, order) => sum + order.amount, 0)



console.log(totalAmount)
